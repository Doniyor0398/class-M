Описание: Создайте класс Rectangle, который имеет свойства width и height, а также методы area() и perimeter(), 
которые возвращают площадь и периметр прямоугольника соответственно.

--------------------------------------------------------------------------------------------------------------------------------
Описание: Создайте класс BankAccount, который имеет свойства accountNumber и balance.
Реализуйте методы deposit(amount) для пополнения баланса, withdraw(amount) для снятия средств и 
getBalance() для получения текущего баланса. Учтите, что нельзя снимать больше, чем на счёте.

--------------------------------------------------------------------------------------------------------------------------------
Задача: Банковский аккаунт с системой паролей (Уровень 10/10)

Описание: Создайте класс BankAccount, который будет отражать функциональность банковского аккаунта с системой аутентификации (пароль).

Требования:
    • При создании аккаунта пользователя требуется указать имя, начальный баланс и пароль.
    • Методы:
        ‣ deposit(amount, password) - позволяет вносить деньги на счет, если пароль верный.
        ‣ withdraw(amount, password) - позволяет снимать деньги со счета, если пароль верный и если достаточно средств.
        ‣ getBalance(password) - возвращает текущий баланс, если пароль верный.
        ‣ changePassword(oldPassword, newPassword) - позволяет менять пароль, если старый пароль верный.
    • Валидация:
        ‣ Если введенный неверный пароль, методы должны выбрасывать исключение с сообщением об ошибке.

--------------------------------------------------------------------------------------------------------------------------------
Задача: Система Финансового Управления

Создай два класса: BankAccount и InvestmentAccount, где InvestmentAccount будет наследоваться от BankAccount.
Оба класса будут взаимодействовать между собой через методы, а также иметь дополнительные методы и массивы для хранения транзакций.

#### Основные требования:

1. Класс `BankAccount`:
   - Принимает имя владельца, начальный баланс и пароль.
   - Методы:
     - deposit(amount, password) - позволяет вносить деньги.

     - withdraw(amount, password) - позволяет снимать деньги, если превышает баланс.

     - getBalance(password) - возвращает текущий баланс.

     - changePassword(oldPassword, newPassword) - позволяет менять пароль.

     - getTransactionHistory(password) - возвращает историю транзакций.

   - Хранит массив транзакций.

2. Класс `InvestmentAccount`, унаследованный от `BankAccount`:

   - Добавляет возможность инвестировать деньги в акции. 
   
   - Методы:
     -  (stockName, amount, password) - инвестирует деньги в акции.

     - withdrawInvestment(stockName, amount, password) - снимает деньги с инвестиций.

     - getInvestmentValue(stockName) - возвращает стоимость текущих инвестиций.
     
   - Хранит объект для хранения информации о инвестициях по акциям.